# TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'
# { time ( source ~/dotfiles/zsh/exports.zsh ) } 2>&1

source ~/dotfiles/zsh/private.zsh
source ~/dotfiles/zsh/exports.zsh
source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
source ~/dotfiles/zsh/theme.zsh
source ~/dotfiles/zsh/config.zsh
source ~/dotfiles/zsh/aliases.zsh
source ~/dotfiles/zsh/bindkeys.zsh
source ~/dotfiles/zsh/zshrc.overrides.zsh
# source $(brew --prefix nvm)/nvm.sh ** THIS SLOWS DOWN STARTUP A LOT
source $ZSH/oh-my-zsh.sh
source ~/dotfiles/zsh/evals.zsh
# source ~/miniconda3/bin/activate  # commented out by conda initialize

plugins=(git)

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

function powerline_precmd() {
    PS1="$(powerline-shell --shell zsh $?)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

# OPAM configuration
. /Users/jblandin/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true
export PATH="/usr/local/opt/sphinx-doc/bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
