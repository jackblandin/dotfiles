set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jk <ESC>

"
" gui settings
"
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme solarized
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

"
" colorscheme
"
syntax enable
set background=dark
colorscheme solarized
let g:lightline = { 'colorscheme': 'jdb_solarized_dark', } " lightline status bar
let g:gitgutter_enabled = 1 " turn on vin-git-gutter

"
" saved macros
"
let @0 = 'f=beldt=i jkj0' " unalign equals
let @9 = '0f:dwi: jkj0' " unalign colons

"
" reveal in nerd tree
"
nmap ,n :NERDTreeFind<CR>


"
" command aliases
"
" :command AliasName string of command to be aliased
:command! Fresh CtrlPClearCache

"
" Custom Functions
"
function! MarkWindowSwap()
    let g:markedWinNum = winnr()
endfunction

function! DoWindowSwap()
    "Mark destination
    let curNum = winnr()
    let curBuf = bufnr( "%" )
    exe g:markedWinNum . "wincmd w"
    "Switch to source and shuffle dest->source
    let markedBuf = bufnr( "%" )
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' curBuf
    "Switch to dest and shuffle source->dest
    exe curNum . "wincmd w"
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' markedBuf 
endfunction

"
" source vim settings
"
so ~/dotfiles/vim/set_file_types.vim
so ~/dotfiles/vim/maps/ctag_maps.vim
so ~/dotfiles/vim/maps/git_gutter_maps.vim
so ~/dotfiles/vim/maps/buffer_swap_maps.vim

autocmd! bufwritepost ~/dotfiles/vimrc.local source ~/.vimrc

"
" Always reload buffer when external changes detected
"
set autoread

"
" syntastic
"
" Run this command to fix rubo-cop not using correct ruby version.
" It will fix your shims (check by running !echo $PATH)
" sudo mv /etc/zshenv /etc/zprofile
