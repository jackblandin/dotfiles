set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jk <ESC>

" highlight search
"set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme solarized
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" colorscheme
syntax enable
set background=dark
colorscheme solarized

let g:lightline = { 'colorscheme': 'jdb_solarized_dark', } " lightline status bar
let g:gitgutter_enabled = 1 " turn on vin-git-gutter

"
" custom syntax highlighting
"
au BufRead,BufNewFile /Users/JackBlandin/tc/dockerfiles/*/*.dev,/etc/nginx/*,/usr/local/nginx/conf/* if &ft == '' | setfiletype nginx | endif 
au BufRead,BufNewFile *es6 setfiletype javascript
au BufRead,BufNewFile /Users/JackBlandin/tc/ansible-config/*/group_vars/* set filetype=yaml

" reveal in nerd tree
nmap ,n :NERDTreeFind<CR>


""
" command aliases
""
" :command AliasName string of command to be aliased
:command Fresh CtrlPClearCache

""
" Custom Functions
""
function! MarkWindowSwap()
    let g:markedWinNum = winnr()
endfunction

function! DoWindowSwap()
    "Mark destination
    let curNum = winnr()
    let curBuf = bufnr( "%" )
    exe g:markedWinNum . "wincmd w"
    "Switch to source and shuffle dest->source
    let markedBuf = bufnr( "%" )
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' curBuf
    "Switch to dest and shuffle source->dest
    exe curNum . "wincmd w"
    "Hide and open so that we aren't prompted and keep history
    exe 'hide buf' markedBuf 
endfunction


"
" ctags
"
" ,+ct - Open the definition in a new tab
noremap <silent> <leader>ct  :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
" ,+cv - Open the definition in a vertical split
noremap <silent> <leader>cv :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

" allow swapping of two vim buffers
noremap <silent> <leader>mw :call MarkWindowSwap()<CR>
noremap <silent> <leader>pw :call DoWindowSwap()<CR>

autocmd! bufwritepost .vimrc source ~/.vimrc

" Always reload buffer when external changes detected
set autoread

" Use the rbenv ruby instead of system (outdated) ruby
let g:syntastic_ruby_mri_exec = '/usr/local/var/rbenv/shims/ruby'
